#fly -t gc login -c localhost -n gestion-consentement
#fly -t gc sp -p consentement-service-metier c- ci/deploy/pipeline.yml -l -ci/deploy/parameters.yml

#fly -t tutorial sp -p spring-boot-service -c concourse_ci/pipeline.yml -l concourse_ci/paramters.yml
#fly -t tutorial unpause-pipeline -p spring-boot-service

TEAMS_RAPPORT_DEV_ON_SUCCESS: &TEAMS_RAPPORT_DEV_ON_SUCCESS
  put: teams-report
  params:
    text: Exécution des tests terminés avec succès
    title: Exécution des tests terminés avec succès pour consentement-service sur dev
    actionName: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME//pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

TEAMS_RAPPORT_DEV_ON_FAILURE: &TEAMS_RAPPORT_DEV_ON_FAILURE
  put: teams-report
  params:
    text: Exécution des tests terminés avec erreur
    title: Exécution des tests terminés avec erreur pour consentement-service sur dev
    actionName: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME//pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME


resource_types:
  - name: kubectl-resource
    type: docker-image
    source: 
      repository: jmkarthik/concourse-kubectl-resource
      tag: latest

  - name: teams-report-type
    type: docker-image
    source:
      repository: navicore/teams-notification-resource
      tag: latest

  - name: push-report-type
    type: docker-image
    source:
      repository: navicore/teams-notification-resource
      tag: latest

resources:
  - name: spring-boot-service
    type: git
    source:
      uri: https://github.com/dorolyci4/concourse-ci-cd-1.git
      branch: master

  - name: spring-boot-service-docker-repository
    type: docker-image
    source:
      email: ((docker-hub-email))
      username: ((docker-hub-username))
      password: ((docker-hub-password))
      repository: ((docker-hub-username))/((docker-hub-repo-name))

  - name: kubectl
    type: kubectl-resource
    source:
      api_server_uri: ((server))
      namespace: ((namespace))
      certificate_authority_data: ((cad))
      token: ((token))

  - name: teams-report
    type: teams-report-type
    source:
      url: ((teams-alerte-webhook))
      branch: ((git-branch-dev))
      ignore_paths:
        - readme.md

  - name: repo-dev
    type: git
    icon: git
    check_every: 10m
    source:
      uri: https://github.com/dorolyci4/concourse-ci-cd-1.git
     # uri: ((github-url))/((github-repo-name)).git
      branch: ((git-branch-dev))
      ignore_paths:
        - readme.md


jobs:
  - name: test
    public: true
    plan:
      - get: spring-boot-service
        trigger: true
      - task: mvn-test
        file: "spring-boot-service/concourse_ci/tasks/maven-test.yml"

  - name: package
    public: true
    serial: true
    plan:
      - get: spring-boot-service
        trigger: true
        passed: [test]
      - task: mvn-package
        file: "spring-boot-service/concourse_ci/tasks/maven-package.yml"
      - put: spring-boot-service-docker-repository
        params:
          build: spring-boot-service-out

  - name: deploy
    public: true
    serial: true
    plan:
      - get: spring-boot-service
        trigger: false
        passed: [package]

      - put: kubectl
        params:
          file: "spring-boot-service/spring-boot-deploy.yaml"

  - name: run-newman-dev
    serial: true
    public: true
    serial_groups: [ develop ]
    plan:
      - in_parallel:
          #- get: start-timer-dev
          - get: repo
            trigger: ((postman-automatique-dev))
            resource: repo-dev
      - task: run-postman-collections
        file: repo/concourse_ci/local-tasks/publish-report-postman.yml
        params:
          COLLECTIONS_URL: ((postman-collection-dev))
          #ENVIRONMENT_URL: ((postman-params-env-dev))
          NEWMAN_ADDITIONAL_URL: ((postman-additional-args))
    on_success: *TEAMS_RAPPORT_DEV_ON_SUCCESS
    on_failure: *TEAMS_RAPPORT_DEV_ON_FAILURE

groups:
  - name: develop
    jobs:
      - run-newman-dev
      - test
      - package
      - deploy
